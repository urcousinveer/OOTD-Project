{"ast":null,"code":"// src/services/LocationWeatherService.js\n\nconst OPENWEATHER_API_KEY = '93d42de33df144236981522e7613bfc0'; // ← your key here\n\n/**\n * Ask browser for location and resolve with { latitude, longitude }.\n */\nexport function getCurrentPositionAsync() {\n  return new Promise((resolve, reject) => {\n    if (!navigator.geolocation) {\n      return reject(new Error('Geolocation not supported by this browser.'));\n    }\n    navigator.geolocation.getCurrentPosition(({\n      coords\n    }) => {\n      resolve({\n        latitude: coords.latitude,\n        longitude: coords.longitude\n      });\n    }, err => {\n      // err.code 1 = permission denied, 2 = position unavailable, 3 = timeout\n      reject(new Error(err.message || 'Failed to get position'));\n    }, {\n      enableHighAccuracy: true,\n      timeout: 10000\n    });\n  });\n}\n\n/**\n * Fetch weather for given coords from OpenWeatherMap.\n */\nexport async function fetchWeatherAsync({\n  latitude,\n  longitude\n}) {\n  const url = `https://api.openweathermap.org/data/2.5/weather` + `?lat=${latitude}&lon=${longitude}` + `&units=metric&appid=${OPENWEATHER_API_KEY}`;\n  const res = await fetch(url);\n  if (!res.ok) {\n    throw new Error('Weather API error: ' + res.statusText);\n  }\n  return await res.json();\n}","map":{"version":3,"names":["OPENWEATHER_API_KEY","getCurrentPositionAsync","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","coords","latitude","longitude","err","message","enableHighAccuracy","timeout","fetchWeatherAsync","url","res","fetch","ok","statusText","json"],"sources":["/Users/vibhorchopra/Desktop/ootd-project/web/src/services/LocationWeatherService.js"],"sourcesContent":["// src/services/LocationWeatherService.js\n\nconst OPENWEATHER_API_KEY = '93d42de33df144236981522e7613bfc0'; // ← your key here\n\n/**\n * Ask browser for location and resolve with { latitude, longitude }.\n */\nexport function getCurrentPositionAsync() {\n  return new Promise((resolve, reject) => {\n    if (!navigator.geolocation) {\n      return reject(new Error('Geolocation not supported by this browser.'));\n    }\n    navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        resolve({\n          latitude: coords.latitude,\n          longitude: coords.longitude,\n        });\n      },\n      (err) => {\n        // err.code 1 = permission denied, 2 = position unavailable, 3 = timeout\n        reject(new Error(err.message || 'Failed to get position'));\n      },\n      { enableHighAccuracy: true, timeout: 10000 }\n    );\n  });\n}\n\n/**\n * Fetch weather for given coords from OpenWeatherMap.\n */\nexport async function fetchWeatherAsync({ latitude, longitude }) {\n  const url =\n    `https://api.openweathermap.org/data/2.5/weather` +\n    `?lat=${latitude}&lon=${longitude}` +\n    `&units=metric&appid=${OPENWEATHER_API_KEY}`;\n\n  const res = await fetch(url);\n  if (!res.ok) {\n    throw new Error('Weather API error: ' + res.statusText);\n  }\n  return await res.json();\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,mBAAmB,GAAG,kCAAkC,CAAC,CAAC;;AAEhE;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAAA,EAAG;EACxC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;MAC1B,OAAOF,MAAM,CAAC,IAAIG,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACxE;IACAF,SAAS,CAACC,WAAW,CAACE,kBAAkB,CACtC,CAAC;MAAEC;IAAO,CAAC,KAAK;MACdN,OAAO,CAAC;QACNO,QAAQ,EAAED,MAAM,CAACC,QAAQ;QACzBC,SAAS,EAAEF,MAAM,CAACE;MACpB,CAAC,CAAC;IACJ,CAAC,EACAC,GAAG,IAAK;MACP;MACAR,MAAM,CAAC,IAAIG,KAAK,CAACK,GAAG,CAACC,OAAO,IAAI,wBAAwB,CAAC,CAAC;IAC5D,CAAC,EACD;MAAEC,kBAAkB,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAM,CAC7C,CAAC;EACH,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA,OAAO,eAAeC,iBAAiBA,CAAC;EAAEN,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAC/D,MAAMM,GAAG,GACP,iDAAiD,GACjD,QAAQP,QAAQ,QAAQC,SAAS,EAAE,GACnC,uBAAuBX,mBAAmB,EAAE;EAE9C,MAAMkB,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAC5B,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE;IACX,MAAM,IAAIb,KAAK,CAAC,qBAAqB,GAAGW,GAAG,CAACG,UAAU,CAAC;EACzD;EACA,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}