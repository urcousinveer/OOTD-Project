{"ast":null,"code":"var _jsxFileName = \"/Users/vibhorchopra/Desktop/ootd-project/web/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\n// web/src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: () => {},\n  logout: () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // On mount, check for a token in localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setUser({\n        token\n      });\n    }\n  }, []);\n  const login = token => {\n    localStorage.setItem('authToken', token);\n    setUser({\n      token\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","user","login","logout","AuthProvider","children","_s","setUser","token","localStorage","getItem","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vibhorchopra/Desktop/ootd-project/web/src/contexts/AuthContext.js"],"sourcesContent":["// web/src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext({\n  user: null,\n  login: () => {},\n  logout: () => {},\n});\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  // On mount, check for a token in localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setUser({ token });\n    }\n  }, []);\n\n  const login = (token) => {\n    localStorage.setItem('authToken', token);\n    setUser({ token });\n  };\n\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACvCM,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACTD,OAAO,CAAC;QAAEC;MAAM,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMN,KAAK,GAAIM,KAAK,IAAK;IACvBC,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC;IACxCD,OAAO,CAAC;MAAEC;IAAM,CAAC,CAAC;EACpB,CAAC;EAED,MAAML,MAAM,GAAGA,CAAA,KAAM;IACnBM,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC;IACpCL,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEC,KAAK;MAAEC;IAAO,CAAE;IAAAE,QAAA,EAClDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACZ,EAAA,CA1BeF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}